(()=>{var __webpack_modules__={699:()=>{eval('{    document.addEventListener(\'DOMContentLoaded\', function() {\r\n\r\n        // Page contact\r\n    var contact = document.getElementById("contact-form")\r\n    if (contact)\r\n        contact.addEventListener(\'submit\', async function (e) {\r\n            e.preventDefault();\r\n\r\n                // === Formulaire de contact avec reCAPTCHA et API ===\r\n                const firstname = document.getElementById(\'firstname\').value;\r\n                const lastname = document.getElementById(\'lastname\').value;\r\n                const email = document.getElementById(\'email\').value;\r\n                const subject = document.getElementById(\'subject\').value;\r\n                const message = document.getElementById(\'message\').value;\r\n\r\n                const token = grecaptcha.getResponse();\r\n                if (!token) {\r\n                    alert("Veuillez valider le reCAPTCHA.");\r\n                    return;\r\n                }\r\n\r\n                try {\r\n                    const response = await fetch(\'/api/contact/send\', {\r\n                        method: \'POST\',\r\n                        headers: { \'Content-Type\': \'application/json\' },\r\n                        body: JSON.stringify({ firstname,lastname, email, subject, message, token })\r\n                    });\r\n\r\n                    const data = await response.json();\r\n                    alert(data.message);\r\n                    if (response.ok) {\r\n                        this.reset();\r\n                        grecaptcha.reset();\r\n                    }\r\n                } catch (error) {\r\n                    alert("Erreur lors de l\'envoi. Veuillez réessayer.");\r\n                    console.error(error);\r\n                }\r\n\r\n                // === Autres formulaires ===\r\n                alert(\'Formulaire envoyé.\');\r\n                this.reset();\r\n        \r\n    });\r\n\r\n    //Bilan energetique\r\n    const nextBtns = document.querySelectorAll(".next-btn");\r\n    const prevBtns = document.querySelectorAll(".prev-btn");\r\n    const steps = document.querySelectorAll(".form-step");\r\n  const progressBar = document.getElementById("progress-bar");\r\n  let currentStep = 0;\r\n\r\n  function updateFormSteps() {\r\n    steps.forEach((step, index) => {\r\n      step.classList.toggle("active", index === currentStep);\r\n    });\r\n\r\n    // Progression en %\r\n    let progress = (currentStep) / (steps.length - 1) * 100;\r\n    progressBar.style.width = progress + "%";\r\n\r\n    // Activer les numéros\r\n    document.querySelectorAll(".progress-step").forEach((step, idx) => {\r\n      step.classList.toggle("active", idx <= currentStep);\r\n    });\r\n  }\r\n// Validation d’une étape\r\nfunction validateStep(stepIndex) {\r\n  const step = steps[stepIndex];\r\n  const inputs = step.querySelectorAll("input, select, textarea");\r\n\r\n  let valid = true;\r\n\r\n  for (let input of inputs) {\r\n    if (input.type === "radio") {\r\n      // Vérifie qu’au moins un radio du même groupe est coché\r\n      const radios = step.querySelectorAll(`input[name="${input.name}"]`);\r\n      if (![...radios].some(r => r.checked)) {\r\n        radios[0].setCustomValidity("Veuillez sélectionner une option."); \r\n        radios[0].reportValidity(); // affiche le tooltip natif\r\n        valid = false;\r\n        break;\r\n      } else {\r\n        radios.forEach(r => r.setCustomValidity("")); // reset si ok\r\n      }\r\n    } else if (!input.checkValidity()) {\r\n      input.reportValidity(); // déclenche le tooltip du navigateur\r\n      valid = false;\r\n      break;\r\n    }\r\n  }\r\n\r\n  return valid;\r\n}\r\n\r\n\r\nnextBtns.forEach(btn => {\r\n  btn.addEventListener("click", () => {\r\n    if (validateStep(currentStep)) {\r\n      currentStep++;\r\n      updateFormSteps();\r\n    }\r\n  });\r\n});\r\n\r\n  // Précédent\r\n  prevBtns.forEach(btn => {\r\n    btn.addEventListener("click", () => {\r\n      currentStep--;\r\n      updateFormSteps();\r\n    });\r\n  });\r\n  \r\n  // Soumission finale\r\nvar audit = document.getElementById("audit-form")\r\nif (audit)\r\n  audit.addEventListener("submit", async (e) => {\r\n    e.preventDefault();\r\n\r\n    const formData = new FormData(e.target);\r\n    const data = Object.fromEntries(formData.entries());\r\n\r\n    const token = grecaptcha.getResponse();\r\n    if (!token) {\r\n      alert("Veuillez valider le reCAPTCHA.");\r\n      return;\r\n    }\r\n    data.token = token;\r\n\r\n    try {\r\n      const response = await fetch(\'/api/contact/sendBilan\', {\r\n        method: \'POST\',\r\n        headers: { \'Content-Type\': \'application/json\' },\r\n        body: JSON.stringify(data)\r\n      });\r\n      const res = await response.json();\r\n      alert(res.message || "Formulaire envoyé !");\r\n      if (response.ok) {\r\n        e.target.reset();\r\n        grecaptcha.reset();\r\n        currentStep = 0;\r\n      }\r\n    } catch (err) {\r\n      alert("Erreur lors de l\'envoi");\r\n      console.error(err);\r\n    }\r\n  });\r\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///699\n\n}')}},__webpack_exports__={};__webpack_modules__[699]()})();